name: Get Conjur Variable (API key)

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths: [".github/workflows/get-conjur-variable.yml"]

permissions:
  contents: read

jobs:
  get-secret:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (optional)
        uses: actions/checkout@v4

      - name: Authenticate with Conjur (API key â†’ session)
        id: auth
        shell: bash
        env:
          CONJUR_URL:           ${{ secrets.CONJUR_URL }}
          CONJUR_ACCOUNT:       ${{ secrets.CONJUR_ACCOUNT }}
          CONJUR_AUTHN_LOGIN:   ${{ secrets.CONJUR_AUTHN_LOGIN }}
          CONJUR_AUTHN_API_KEY: ${{ secrets.CONJUR_AUTHN_API_KEY }}
        run: |
          set -euo pipefail
          # URL-encode the login for the path segment
          LOGIN_ENC="${CONJUR_AUTHN_LOGIN//\//%2F}"
          LOGIN_ENC="${LOGIN_ENC//:/%3A}"

          # Exchange API key for a short-lived session token (raw bytes)
          SESSION_RAW=$(printf %s "$CONJUR_AUTHN_API_KEY" | \
            curl -s -k --data-binary @- \
              "$CONJUR_URL/authn/$CONJUR_ACCOUNT/$LOGIN_ENC/authenticate")

          # Base64-encode for the Authorization header
          SESSION_B64=$(printf %s "$SESSION_RAW" | base64 | tr -d '\r\n')
          test -n "$SESSION_B64" || { echo "Failed to obtain Conjur session token"; exit 1; }

          echo "session_b64=$SESSION_B64" >> "$GITHUB_OUTPUT"

      - name: Fetch variable value (masked)
        id: getvar
        shell: bash
        env:
          CONJUR_URL:     ${{ secrets.CONJUR_URL }}
          CONJUR_ACCOUNT: ${{ secrets.CONJUR_ACCOUNT }}
          CONJUR_VAR_ID:  ${{ vars.CONJUR_VAR_ID }}     # e.g. data/vault/.../password
        run: |
          set -euo pipefail
          AUTH_HEADER="Authorization: Token token=\"${{ steps.auth.outputs.session_b64 }}\""

          # Encode only the variable id (slashes -> %2F)
          VAR_ID_ENC="${CONJUR_VAR_ID//\//%2F}"

          # Get the secret value (raw text)
          SECRET_VALUE=$(curl -s -k -H "$AUTH_HEADER" \
            "$CONJUR_URL/secrets/${CONJUR_ACCOUNT}/variable/${VAR_ID_ENC}")

          # Mask it so it never prints in cleartext in logs
          echo "::add-mask::$SECRET_VALUE"

          # Expose to later steps without printing it
          echo "SECRET_VALUE=$SECRET_VALUE" >> "$GITHUB_ENV"

          # Optional: show a redacted preview
          echo "Retrieved value for '$CONJUR_VAR_ID' (len: ${#SECRET_VALUE})."
          echo "Preview: ${SECRET_VALUE:0:3}***"

      - name: Use the secret in another step (example)
        run: |
          echo "I can use \$SECRET_VALUE here without printing it."
          test -n "$SECRET_VALUE" || { echo "Secret empty"; exit 1; }
        env:
          SECRET_VALUE: ${{ env.SECRET_VALUE }}
